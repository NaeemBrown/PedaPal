<!-- Resources/Styles.xaml -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:conv="clr-namespace:PedagogyPal.Converters;assembly=PedagogyPal"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Define Colors -->
    <Color x:Key="PrimaryColor">#34495E</Color>
    <Color x:Key="SecondaryColor">#16A085</Color>
    <Color x:Key="AccentColor">#2980B9</Color>
    <Color x:Key="AccentColorMedium">#2471A3</Color>
    <Color x:Key="AccentColorDark">#1F618D</Color>
    <Color x:Key="AccentColorLight">#5DADE2</Color>
    <Color x:Key="BackgroundColor">#F4F6F7</Color>
    <Color x:Key="TextColor">#2C3E50</Color>

    <!-- Define Brushes -->
    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
    <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}"/>
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>
    <SolidColorBrush x:Key="AccentBrushMedium" Color="{StaticResource AccentColorMedium}"/>
    <SolidColorBrush x:Key="AccentBrushDark" Color="{StaticResource AccentColorDark}"/>
    <SolidColorBrush x:Key="AccentBrushLight" Color="{StaticResource AccentColorLight}"/>
    <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
    <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}"/>

    <!-- Define Font Families -->
    <FontFamily x:Key="HeaderFont">Segoe UI Bold</FontFamily>
    <FontFamily x:Key="ContentFont">Segoe UI</FontFamily>

    <!-- DropShadowEffect Resource -->
    <DropShadowEffect x:Key="DropShadowEffect" Color="Black" BlurRadius="15" ShadowDepth="5" Opacity="0.2"/>

    <!-- Hamburger Button Style -->
    <Style x:Key="HamburgerButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="PART_Grid" RenderTransformOrigin="0,0.5">
                        <Grid.RenderTransform>
                            <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1"/>
                        </Grid.RenderTransform>
                        <Ellipse x:Name="PART_Ellipse" Fill="{TemplateBinding Background}"/>
                        <TextBlock Text="{TemplateBinding Content}" 
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center" 
                                   FontSize="24" 
                                   FontWeight="Bold"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="ScaleTransform" 
                                            Storyboard.TargetProperty="ScaleX" 
                                            To="1.1" Duration="0:0:0.2"/>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="ScaleTransform" 
                                            Storyboard.TargetProperty="ScaleY" 
                                            To="1.1" Duration="0:0:0.2"/>
                                        <ColorAnimation 
                                            Storyboard.TargetName="PART_Ellipse" 
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
                                            To="{StaticResource AccentColorMedium}" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="ScaleTransform" 
                                            Storyboard.TargetProperty="ScaleX" 
                                            To="1.0" Duration="0:0:0.2"/>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="ScaleTransform" 
                                            Storyboard.TargetProperty="ScaleY" 
                                            To="1.0" Duration="0:0:0.2"/>
                                        <ColorAnimation 
                                            Storyboard.TargetName="PART_Ellipse" 
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
                                            To="{StaticResource PrimaryColor}" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="ScaleTransform" 
                                            Storyboard.TargetProperty="ScaleX" 
                                            To="0.9" Duration="0:0:0.1"/>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="ScaleTransform" 
                                            Storyboard.TargetProperty="ScaleY" 
                                            To="0.9" Duration="0:0:0.1"/>
                                        <ColorAnimation 
                                            Storyboard.TargetName="PART_Ellipse" 
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
                                            To="{StaticResource AccentColorMedium}" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="ScaleTransform" 
                                            Storyboard.TargetProperty="ScaleX" 
                                            To="1.0" Duration="0:0:0.1"/>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="ScaleTransform" 
                                            Storyboard.TargetProperty="ScaleY" 
                                            To="1.0" Duration="0:0:0.1"/>
                                        <ColorAnimation 
                                            Storyboard.TargetName="PART_Ellipse" 
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
                                            To="{StaticResource PrimaryColor}" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SidebarButtonWithIconStyle -->
    <Style x:Key="SidebarButtonWithIconStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Margin" Value="10,5"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="8"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0">
                        <Grid>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <Image Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                       Width="28" Height="28" Margin="10,0,15,0"/>
                                <TextBlock Text="{TemplateBinding Content}" VerticalAlignment="Center" FontSize="18"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#2C3E50"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#1A252F"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#FFAAAAAA"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Raised Button Style -->
    <Style x:Key="RaisedButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="160"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="2" Opacity="0.4"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" Value="{DynamicResource AccentBrushMedium}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentBrushDark}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Outlined Button Style -->
    <Style x:Key="OutlinedButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="160"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AccentBrushMedium}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentBrushMedium}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AccentBrushDark}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentBrushDark}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Standard ListView Style -->
    <Style x:Key="StandardListViewStyle" TargetType="ListView">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentFont}"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <!-- Standard ListViewItem Style -->
    <Style x:Key="StandardListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="Padding" Value="10"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#D5F5E3"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- SearchBox Style -->
    <Style x:Key="SearchBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="15,7"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentFont}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10">
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                        <!-- Placeholder TextBlock -->
                        <TextBlock Text="Search tasks..." 
                                   Foreground="Gray" 
                                   Margin="20,0,0,0"
                                   VerticalAlignment="Center"
                                   IsHitTestVisible="False"
                                   Visibility="Collapsed"
                                   x:Name="PlaceholderText"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Show placeholder when TextBox is empty and not focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Custom Calendar Style -->
    <Style x:Key="CustomCalendarStyle" TargetType="Calendar">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentFont}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="5" Opacity="0.1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Calendar">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10">
                        <Grid>
                            <CalendarItem x:Name="PART_CalendarItem"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CalendarDayButtonStyle" Value="{DynamicResource CustomCalendarDayButtonStyle}"/>
        <Setter Property="CalendarButtonStyle" Value="{DynamicResource CustomCalendarButtonStyle}"/>
    </Style>

    <!-- Custom Calendar Day Button Style -->
    <Style x:Key="CustomCalendarDayButtonStyle" TargetType="CalendarDayButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentFont}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDayButton">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrushLight}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrushMedium}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <!-- Highlight Today -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsToday" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrushLight}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Custom Calendar Navigation Button Style -->
    <Style x:Key="CustomCalendarButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="{StaticResource HeaderFont}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentBrushDark}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
